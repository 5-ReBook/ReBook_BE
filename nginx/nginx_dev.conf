worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
}

http {
    include /etc/nginx/mime.types;
    charset utf-8;

    # 모니터링 로그 기록안함
    map $host $loggable {
        prometheus.rebook45.link 0;
        monitor.rebook45.link 0;
        default 1;
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format error_check '$remote_addr - $remote_user [$time_local] "$request" '
                           'status=$status host=$host '
                           'referer=$http_referer '
                           'user_agent=$http_user_agent '
                           'cookie=$http_cookie '
                           'authorization=$http_authorization'
                           'sentbyclient=$http_uuid'
                           'sendbyupstream=$upstream_http_uuid'
                           ;

    access_log /var/log/nginx/access.log main if=$loggable;
    error_log /var/log/nginx/error.log;

    # 400,401에러 뜨는 경우 에러체크 로그 추가
    map $status $loggable_error {
        ~^(400|401)$ 1;
        default 0;
    }
    access_log /var/log/nginx/error_check.log error_check if=$loggable_error;

    # 서버리스트
    upstream be-rebook-auth { server 192.168.1.168:8080; }
    upstream be-rebook-chat { server 192.168.1.70:8080; }
    upstream be-rebook-members { server 192.168.1.207:8080; }
    upstream be-rebook-product { server 192.168.1.208:8080; }

    # CORS 설정
    map $http_origin $cors_allowed_origin {
        default "";
        "http://localhost:5173" "http://localhost:5173";
        "https://www.rebook45.link" "https://www.rebook45.link";
        "https://rebook45.link" "https://rebook45.link";
    }

    # HTTP
    server {
        listen 80;
        listen [::]:80;
        server_name api.rebook45.link;

        add_header 'Access-Control-Allow-Origin' $cors_allowed_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization, X-Custom-Header' always;

        location / {
             if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_allowed_origin;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Expose-Headers' 'Authorization, X-Custom-Header';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            return 308 https://$server_name$request_uri;
        }

        # 유레카 서버 등록서비스 확인용
        location /eureka {
            proxy_pass http://192.168.1.231:8761;
        }
    }

    # HTTPS
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name api.rebook45.link;

        ssl_certificate /etc/nginx/ssl/certs/server.crt;
        ssl_certificate_key /etc/nginx/ssl/private/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # CORS 공통 헤더
        add_header 'Access-Control-Allow-Origin' $cors_allowed_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization, X-Custom-Header' always;

        # 프록시 공통 헤더
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Authorization $http_authorization;

        #테스트 헤더
        proxy_http_version 1.1;
        #nginx가 필터링하는 헤더도 전송
        proxy_pass_request_headers on;
        proxy_pass_header Authorization;
        # proxy_cookie_domain api.rebook45.link rebook45.link;
        # proxy_redirect off;
        # port_in_redirect off;
        # proxy_pass_header field;
        # proxy_pass_request_body on;
        # proxy_pass_request_headers on;

        # Option 공통 블록
        location @cors_preflight {
            add_header 'Access-Control-Allow-Origin' $cors_allowed_origin;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Expose-Headers' 'Authorization, X-Custom-Header';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        location /test {
            add_header Set-Cookie "access=access123;Domain=.rebook45.link;Path=/;Max-Age=31536000 SameSite=None; Secure";
            add_header Set-Cookie "refresh=refresh123;Domain=.rebook45.link;Path=/;Max-Age=31536000";
            return 200 "ok";
        }

        # 공통적용 - 아이피는 upstream에 설정
        location /auth {
            # Secure 쿠키 설정
            proxy_cookie_path / "/; SameSite=None;";

            if ($request_method = 'OPTIONS') {
                return 204 @cors_preflight;
            }
            proxy_pass http://be-rebook-auth;
        }

        location /members {
            if ($request_method = 'OPTIONS') {
                return 204 @cors_preflight;
            }
            proxy_pass http://be-rebook-members;
        }

        location /products {
            if ($request_method = 'OPTIONS') {
                return 204 @cors_preflight;
            }
            proxy_pass http://be-rebook-product;
        }

        location /chat {
            if ($request_method = 'OPTIONS') {
                return 204 @cors_preflight;
            }
            proxy_pass http://be-rebook-chat;
        }

        # 채팅 소켓 설정
        location /chat/ws {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            proxy_pass http://be-rebook-chat;
        }
    }

    ######## 모니터링 서버연결용 - 변경금지! ###########

    # grafana web
    server {
        listen 80;
        server_name monitor.rebook45.link;

        location / {
            proxy_pass http://192.168.3.63:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            access_log off;
        }
    }

    # Prometheus web
    server {
        listen 80;
        server_name prometheus.rebook45.link;

        location / {
            proxy_pass http://192.168.3.63:9090;
        }
    }

    # nginx prometheus exporter
    server {
        listen 8080;
        server_name 192.168.4.228;

        location /stub_status {
            access_log off;
            stub_status on;
            allow 192.168.0.0/16;
            allow 172.0.0.0/8;
            deny all;
        }
    }

    # Health check and metrics
    server {
        listen 80;
        server_name 192.168.4.228;

        location /metrics {
            stub_status on;
            allow 192.168.0.0/16;
            deny all;
        }

        location /health {
            access_log off;
            default_type text/plain;
            return 200 'Healthy';
        }
    }
}