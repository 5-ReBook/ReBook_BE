worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
}

http {

    include /etc/nginx/mime.types;

    charset utf-8;

    map $http_origin $cors_allowed_origin {
            default "";
            "http://localhost:5173" "http://localhost:5173";
            "https://www.rebook45.link" "https://www.rebook45.link";
            "https://rebook45.link" "https://rebook45.link";
    }

    server {
        listen 80;
        server_name localhost;

# SSL 우회용
#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }

#     server {
#         listen 443 ssl;
#         listen [::]:443 ssl;
#
#         server_name localhost;
#
#         ssl_certificate /etc/nginx/server.crt;
#         ssl_certificate_key /etc/nginx/server.key;
#         ssl_protocols TLSv1.2 TLSv1.3;

        location /auth {
            proxy_pass http://be-rebook-auth:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 헤더 추가
            if ($cors_allowed_origin) {
                add_header 'Access-Control-Allow-Origin' $cors_allowed_origin always;
            }
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # OPTIONS 요청 처리 (CORS 사전 요청)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_allowed_origin;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }
        }

        location /members {
            proxy_pass http://be-rebook-members:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 헤더 추가
            if ($cors_allowed_origin) {
                add_header 'Access-Control-Allow-Origin' $cors_allowed_origin always;
            }
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # OPTIONS 요청 처리 (CORS 사전 요청)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_allowed_origin;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }
        }

        location /products {
            proxy_pass http://be-rebook-product:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 헤더 추가
            if ($cors_allowed_origin) {
                add_header 'Access-Control-Allow-Origin' $cors_allowed_origin always;
            }
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # OPTIONS 요청 처리 (CORS 사전 요청)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_allowed_origin;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }
        }
    }
}