worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
}

http {

    include /etc/nginx/mime.types;

    charset utf-8;

    server {
        listen 80;
        server_name localhost;

# SSL 우회용
#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }

#     server {
#         listen 443 ssl;
#         listen [::]:443 ssl;
#
#         server_name localhost;
#
#         ssl_certificate /etc/nginx/server.crt;
#         ssl_certificate_key /etc/nginx/server.key;
#         ssl_protocols TLSv1.2 TLSv1.3;

        location /auth {
            proxy_pass http://be-rebook-auth:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /members {
            proxy_pass http://be-rebook-members:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /products {
            proxy_pass http://be-rebook-product:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /chat/ws {
            proxy_pass http://be-rebook-chat:8080;
            proxy_http_version 1.1;  # HTTP/1.1을 사용하도록 설정
            proxy_set_header Upgrade $http_upgrade;  # WebSocket 업그레이드 헤더 추가
            proxy_set_header Connection "Upgrade";  # Connection 헤더 설정
            proxy_set_header Host $host;   
        }

        location /chat {
            proxy_pass http://be-rebook-chat:8080;
            proxy_set_header Host $host;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}