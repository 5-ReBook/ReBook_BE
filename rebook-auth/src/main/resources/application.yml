spring:
  application:
    name: rebook-auth

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MYSQL_DB_HOST}:3306/${MYSQL_DB_NAME}?serverTimezone=UTC&characterEncoding=UTF-8
    username: ${MYSQL_DB_USERNAME}
    password: ${MYSQL_DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  servlet:
    multipart:
      enabled: true
      max-request-size: 30MB
      max-file-size: 30MB
      resolve-lazily: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 180000  # 3 * 60 * 1000 == 3분

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

jwt:
  secret: ${JWT_SECRET_KEY}
  access-token-expiration: 3600000 # ms
  refresh-token-expiration: 86400000 # ms

# Eureka Client 설정
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL}
  # instance: # IP 주소로 등록시 활성화
  #   hostname: 0.0.0.0
  #   preferIpAddress: true

# 추후에 S3 로직을 Common 모듈로 분리하고 지울것
cloud:
  aws:
    s3:
      bucket: rebookbucket
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}
